GIT And GITHUB Tutorial

GIT:-
A version control system (help track changes in code or project)

Helps to :-
1. Track history of changes in the project
2. In collaboration

commit -- finalize the changes
add -- commit

Github saves commit in form of history

Commands in Git:-
1. Clone, to download any repository locally onto our machine from remote(github)
2. Status, as in to check if any changes have occured compared to files in the repo.
3. Add, commit commands, If a change is done, then (1)add --> (2)commit are required to finalize the changes
4. Push command, upload local repo content to remote repo.

For initializing a repo, Consider the pwd as the folder containing the files to be added:-
1. git init
2. git remote add origin <link>
3. git remote -v, to check the status
4. git branch, to check the branches
5. git branch -M "name", to rename the branch
6. got push origin branchname, to add the files in the github repo.

For branches:-
1. branch, to check the current branch
2. checkout branchname, to switch to that branch
3. checkout -b branchname, to create new branch
4. branch -M namebranch, to rename the branch
5. branch -d branchname, to delete the branch

For Merging:-
git diff branchname, to compare the branch with main branch
git merge branchname, to merge branches, For this more preferred way is to do Pull requests in Github

Git pull command, to fetch and download from the remote repo and immediately update the local repo.

Git reset, for undoing the add changes
Git reset HEAD~1, for undoing the commit changes (one step back)


4 possible status for changes occured:-  Untracked, Modified, Stages, Unmodified


Fork:- Making a copy of a repository into our account from some another account, by committing changes into our forked repository, we can create Pull request to commit the change into the original repo. from out forked repo.